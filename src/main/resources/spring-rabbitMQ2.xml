<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">

	<!--创建链接工厂 一个稍微复杂一点的实例 -->
	<!--channel-cache-size: -->
	<!--cache-mode: -->
	<!--ublisher-confirms: -->
	<!--publisher-returns: -->
	<!--onnection-timeout -->
	<rabbit:connection-factory id="connectionFactory"
		host="10.211.55.19" port="5672" username="xiaohei" password="123456"
		virtual-host="/atguigu" channel-cache-size="25" cache-mode="CHANNEL"
		publisher-confirms="true" publisher-returns="true" connection-timeout="200" />

	<!--还不知道是干什么的 -->
	<bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
		<property name="backOffPolicy">
			<bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
				<property name="initialInterval" value="200" />
				<property name="maxInterval" value="30000" />
			</bean>
		</property>
		<property name="retryPolicy">
			<bean class="org.springframework.retry.policy.SimpleRetryPolicy">
				<property name="maxAttempts" value="5" />
			</bean>
		</property>
	</bean>


	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 如果使用多exchange必须配置declared-by="connectAdmin" -->
	<rabbit:admin id="rabbitAdmin" connection-factory="connectionFactory" />

	<!-- 消息对象json转换类 -->
	<bean id="jsonMessageConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

	<!-- 确认后回调: -->
	<bean id="confirmCallback" class="sprinamqp.test2.MsgSendConfirmCallBack" />
	<!-- 失败后return回调: -->
	<bean id="sendReturnCallback" class="sprinamqp.test2.MsgSendReturnCallback" />

	<!--消息的生产者 -->
	<!--exchange:交换机name -->
	<!--return-callback: -->
	<!--message-converter:消息转换器 如果在这里配置就等于写死了消息转换器 -->
	<!--routing-key:路由的key 如果在这里配置就等于写死了路由的key -->
	<!--mandatory：必须设置true,return callback才生效 -->
	<!--confirm-callback：消息发送后的回调 无论是否成功都会回调 回调参数中可以判断消息是否发送成功 -->
	<!--retry-template： -->
	<rabbit:template id="ampqTemplate" connection-factory="connectionFactory"
		return-callback="sendReturnCallback" message-converter="jsonMessageConverter"
		mandatory="true" confirm-callback="confirmCallback" retry-template="retryTemplate" />



	<!-- queue队列配置 -->
	<!-- durable:是否持久化 -->
	<!-- exclusive: 仅创建者可以使用的私有队列，断开后自动删除 -->
	<!-- auto_delete: 当所有消费客户端连接断开后，是否自动删除队列 -->
	<!-- declared-by:配置多个转换器的时候 队列和转换器都需要指定 rabbit:admin <rabbit:queue name="test_queue_1" 
		durable="true" auto-delete="false" exclusive="false" declared-by="rabbitAdmin" 
		/> -->

	<rabbit:queue name="test_queue_2" durable="true"
		auto-delete="false" exclusive="false" declared-by="rabbitAdmin" />
	<!-- exchange direct类型交换机配置 -->
	<!-- rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。 -->
	<!-- rabbit:binding：设置消息queue匹配的key -->
	<rabbit:direct-exchange name="test-mq-exchange"
		durable="true" auto-delete="false" id="test-mq-exchange" declared-by="rabbitAdmin">
		<!--绑定队列到交换机 -->
		<rabbit:bindings>
			<!--<rabbit:binding queue="test_queue_1" key="test_queue_key" /> -->
			<rabbit:binding queue="test_queue_2" key="test_queue_key" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!--topic模式的交换机 -->
	<!-- <rabbit:topic-exchange name="${mq.queue}_exchange" durable="true" auto-delete="false"> -->
	<!-- <rabbit:bindings> -->
	<!-- 设置消息Queue匹配的pattern (direct模式为key) -->
	<!-- <rabbit:binding queue="test_queue" pattern="${mq.queue}_patt"/> -->
	<!-- </rabbit:bindings> -->
	<!-- </rabbit:topic-exchange> -->



	<!-- 消费者 消费者需要配置在监听中 -->
	<!-- 自动应答 消费者0 <bean id="mqConsumer" class="sprinamqp.test2.MQConsumer" 
		/> -->
	<!-- 手动应答 消费者1 -->
	<bean id="mqConsumer1" class="sprinamqp.test2.MQConsumerManual" />
	<!-- 手动应答 消费者2 -->
	<bean id="mqConsumer2" class="sprinamqp.test2.MQConsumerManual2" />

	<!-- listener配置 消费者 -->
	<!-- queues：监听的队列，多个的话用逗号（,）分隔 ref：监听器 -->

	<!--异步消费者 自动ack确认 <rabbit:listener-container connection-factory="connectionFactory" 
		acknowledge="auto" message-converter="jsonMessageConverter"> <rabbit:listener 
		queues="test_queue_1" ref="mqConsumer" /> </rabbit:listener-container> -->
	<!-- 这里模拟一个队列 多个消费者 -->
	<!--异步消费者 手动ack确认 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="manual">
		<rabbit:listener queues="test_queue_2" ref="mqConsumer1" />
	</rabbit:listener-container>

	<!-- 异步消费者 手动ack确认 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="manual">
		<rabbit:listener queues="test_queue_2" ref="mqConsumer2" />
	</rabbit:listener-container>

</beans>
